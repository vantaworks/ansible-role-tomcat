---
# install tasks file for ansible-role-tomcat

- name: "Install : Determine Java Path"
  command:
    cmd: "readlink -f /etc/alternatives/java"
  register: tomcat_java_home_raw
  changed_when: False

- name: "Install : Set Java Path"
  set_fact:
    tomcat_java_home: "{{ tomcat_java_home_raw.stdout | regex_replace('^(.*)/bin/java', '\\1') }}"

- name: "Install : Tomcat user creation"
  when: tomcat_user_create
  block:
    - name: "Install : Create Tomcat user group"
      group:
        name: "{{ tomcat_group }}"
        gid: "{{ tomcat_group_gid | default(omit) }}"
        state: present

    - name: "Install : Create Tomcat user"
      user:
        name: "{{ tomcat_user }}"
        home: "{{ tomcat_catalina_base }}"
        group: "{{ tomcat_group }}"
        uid: "{{ tomcat_user_uid | default(omit) }}"
        shell: /bin/nologin
        state: present
        comment: Tomcat Service User

- name: "Install : Check if any Tomcat version is already installed"
  stat:
    path: "{{ tomcat_install_path }}"
  register: is_installed_any_version

- name: "Install : Create Tomcat install directory"
  file:
    path: '{{ tomcat_install_path }}'
    owner: root
    group: root
    mode: "0755"
    state: directory
  when: not is_installed_any_version.stat.exists

- name: "Install : Set specific install path"
  set_fact:
    tomcat_path: "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_minor_version }}"

- name: "Install : Check if Tomcat v{{ tomcat_minor_version }} is already installed"
  stat:
    path: "{{ tomcat_path }}"
  register: is_installed

- name: "Install : Download Tomcat"
  when: not is_installed.stat.exists
  block:
    - name: "Install : Create temporary download directory"
      file:
        path: "{{ tomcat_temp_download_path }}"
        state: directory
        mode: "0755"
      when: not is_installed.stat.exists

    - name: "Install : Download Tomcat"
      get_url:
        url: "{{ tomcat_download_url }}/v{{ tomcat_minor_version }}/bin/apache-tomcat-{{ tomcat_minor_version }}.tar.gz"
        dest: '{{ tomcat_temp_download_path }}'
        timeout: 120
        mode: "0600"

    - name: "Install : Unarchive Tomcat"
      unarchive:
        src: "{{ tomcat_temp_download_path }}/apache-tomcat-{{ tomcat_minor_version }}.tar.gz"
        dest: "{{ tomcat_install_path }}"
        remote_src: True
        owner: "{% if tomcat_permissions_production %}root{% else %}{{ tomcat_user }}{% endif %}"
        group: "{{ tomcat_group }}"
        creates: "{{ tomcat_path }}"
        mode: "{% if tomcat_permissions_production %}0750{% else %}0755{% endif %}"
      register: tomcat_installed

    - name: "Install : Symlink latest version"
      file:
        src: "{{ tomcat_path }}"
        dest: "{{ tomcat_catalina_home }}"
        mode: "{% if tomcat_permissions_production %}0750{% else %}0755{% endif %}"
        state: link

    - name: "Install : Clean up temporary files"
      file:
        path: '{{ tomcat_temp_download_path }}'
        state: absent
      changed_when: False

- name: "Install : Build CATALINA_BASE"
  when: tomcat_catalina_home != tomcat_catalina_base
  block:
    - name: "Install : Create directories (1)"
      file:
        path: "{{ tomcat_catalina_base }}/{{ item }}"
        state: directory
        owner: "{% if tomcat_permissions_production %}root{% else %}{{ tomcat_user }}{% endif %}"
        group: "{{ tomcat_group }}"
        mode: "{% if tomcat_permissions_production %}0750{% else %}0755{% endif %}"
      loop:
        - bin
        - conf
        - lib
        - webapps

    - name: "Install : Create directories (2)"
      file:
        path: "{{ tomcat_catalina_base }}/{{ item }}"
        state: directory
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: "0755"
      loop:
        - logs
        - temp
        - work

    - name: "Install : Symlink upstream directories/apps"
      file:
        src: "{{ tomcat_catalina_home }}/{{ item }}"
        dest: "{{ tomcat_catalina_base }}/{{ item }}"
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: "0755"
        state: link
      loop:
        - "webapps/host-manager"
        - "webapps/manager"

    - name: "Install : Symlink upstream config files"
      file:
        src: "{{ tomcat_catalina_home }}/{{ item }}"
        dest: "{{ tomcat_catalina_base }}/{{ item }}"
        mode: "{% if tomcat_permissions_production %}0640{% else %}0644{% endif %}"
        state: link
      loop:
        - "conf/web.xml"
        - "conf/tomcat-users.xsd"
        - "conf/context.xml"
        - "conf/logging.properties"
        - "conf/catalina.properties"
        - "conf/catalina.policy"

- name: "Install : Clean older Tomcat versions"
  when: tomcat_purge_old_versions
  block:
    - name: "Install : Determine verions to purge"
      find:
        path: "{{ tomcat_install_path }}"
        file_type: directory
        excludes:
          - "latest"
          - "apache-tomcat-{{ tomcat_minor_version }}"
      register: tomcat_purgable_versions

    - name: "Install : Purge old versions"
      file:
        path: "{{ item.path }}"
        state: absent
      when:
        - "{{ tomcat_purgable_versions is defined and (tomcat_purgable_versions.files|length > 0) }}"
      loop: "{{ tomcat_purgable_versions.files }}"
